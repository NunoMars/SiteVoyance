# Generated by Django 5.1.4 on 2024-12-13 09:00

import django.db.models.deletion
import pgvector.django.vector
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    def create_pgvector_extension(self, schema_editor) -> None:
        schema_editor.execute("CREATE EXTENSION IF NOT EXISTS vector;")

    dependencies = []

    operations = [
        migrations.RunPython(create_pgvector_extension),
        migrations.CreateModel(
            name="MajorArcana",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("card_name", models.CharField(max_length=50)),
                ("card_signification_gen", models.TextField(default="fr")),
                ("card_signification_warnings", models.TextField(default="fr")),
                ("card_signification_love", models.TextField(default="fr")),
                ("card_signification_work", models.TextField(default="fr")),
                ("card_image", models.ImageField(upload_to="MajorArcanaCards")),
                (
                    "card_polarity",
                    models.CharField(
                        choices=[
                            ("Positif", "Positif"),
                            ("Negatif", "Negatif"),
                            ("Neutral", "neutral"),
                        ],
                        default="Positif",
                        max_length=10,
                    ),
                ),
                ("card_text_summarized", models.TextField(default="none")),
            ],
        ),
        migrations.CreateModel(
            name="LeftDeck",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "card_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="clairvoyance.majorarcana",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MajorArcanaVector",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField()),
                ("embedding", pgvector.django.vector.VectorField(dimensions=512)),
                ("metadata", models.JSONField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("uploaded_at", models.DateTimeField(auto_now=True)),
                (
                    "card_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="clairvoyance.majorarcana",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RightDeck",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "card_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="clairvoyance.majorarcana",
                    ),
                ),
            ],
        ),
    ]
